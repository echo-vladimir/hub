name: ci
on:
  pull_request:
  push:
    branches: [main]

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  verify:
    name: verify
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Detect Changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            app:
              - '**/*'
              - '!content/**'
              - '!public/media/**'
            cms:
              - 'content/**'
              - 'public/media/**'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Run Biome Check
        if: ${{ steps.changes.outputs.app == 'true' }}
        run: pnpm run check --colors=off

      - name: Run Type Check
        if: ${{ steps.changes.outputs.app == 'true' }}
        run: pnpm run typecheck

      - name: Build Application
        run: pnpm run build
        env:
          KEYSTATIC_GITHUB_CLIENT_ID: ${{ secrets.KEYSTATIC_GITHUB_CLIENT_ID }}
          KEYSTATIC_GITHUB_CLIENT_SECRET: ${{ secrets.KEYSTATIC_GITHUB_CLIENT_SECRET }}
          KEYSTATIC_SECRET: ${{ secrets.KEYSTATIC_SECRET }}

      - name: Run SCA Monitor â€¢ Snyk (high+ only)
        if: ${{ steps.changes.outputs.app == 'true' }}
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: >
            test --all-projects --detection-depth=4 --severity-threshold=high
            --exclude=node_modules,.next

      - name: Run Lighthouse Audit
        if: ${{ steps.changes.outputs.app == 'true' }}
        uses: treosh/lighthouse-ci-action@v12
        with:
          configPath: ./lighthouserc.json
          uploadArtifacts: true
